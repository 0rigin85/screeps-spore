// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum {number}
 */
export namespace Screeps.Creep{
export enum Action{
  NONE= 0,
  Harvest= 1,
  MoveTo= 2,
  untilFailure= 3
}};

/**
 * @constructor
 */
export namespace Screeps.Creep{
export class NextAction {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns NextAction
 */
__init(i:number, bb:flatbuffers.ByteBuffer):NextAction {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
code():number {
  return this.bb!.readInt16(this.bb_pos);
};

/**
 * @returns number
 */
action():number {
  return this.bb!.readInt16(this.bb_pos + 2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number code
 * @param number action
 * @returns flatbuffers.Offset
 */
static createNextAction(builder:flatbuffers.Builder, code: number, action: number):flatbuffers.Offset {
  builder.prep(2, 4);
  builder.writeInt16(action);
  builder.writeInt16(code);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace Screeps.Creep{
export class Harvest {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Harvest
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Harvest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Harvest= obj
 * @returns Harvest
 */
static getRootAsHarvest(bb:flatbuffers.ByteBuffer, obj?:Harvest):Harvest {
  return (obj || new Harvest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
index():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Screeps.Creep.NextAction= obj
 * @returns Screeps.Creep.NextAction
 */
next(index: number, obj?:Screeps.Creep.NextAction):Screeps.Creep.NextAction|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Screeps.Creep.NextAction).__init(this.bb!.__vector(this.bb_pos + offset) + index * 4, this.bb!) : null;
};

/**
 * @returns number
 */
nextLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param Screeps.Creep.Actor= obj
 * @returns Screeps.Creep.Actor|null
 */
actor(obj?:Screeps.Creep.Actor):Screeps.Creep.Actor|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Screeps.Creep.Actor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Screeps.Creep.Actor= obj
 * @returns Screeps.Creep.Actor|null
 */
target(obj?:Screeps.Creep.Actor):Screeps.Creep.Actor|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Screeps.Creep.Actor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startHarvest(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number index
 */
static addIndex(builder:flatbuffers.Builder, index:number) {
  builder.addFieldInt16(0, index, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nextOffset
 */
static addNext(builder:flatbuffers.Builder, nextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nextOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startNextVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset actorOffset
 */
static addActor(builder:flatbuffers.Builder, actorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, actorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset targetOffset
 */
static addTarget(builder:flatbuffers.Builder, targetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, targetOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endHarvest(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createHarvest(builder:flatbuffers.Builder, index:number, nextOffset:flatbuffers.Offset, actorOffset:flatbuffers.Offset, targetOffset:flatbuffers.Offset):flatbuffers.Offset {
  Harvest.startHarvest(builder);
  Harvest.addIndex(builder, index);
  Harvest.addNext(builder, nextOffset);
  Harvest.addActor(builder, actorOffset);
  Harvest.addTarget(builder, targetOffset);
  return Harvest.endHarvest(builder);
}
}
}
/**
 * @constructor
 */
export namespace Screeps.Creep{
export class MoveTo {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns MoveTo
 */
__init(i:number, bb:flatbuffers.ByteBuffer):MoveTo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param MoveTo= obj
 * @returns MoveTo
 */
static getRootAsMoveTo(bb:flatbuffers.ByteBuffer, obj?:MoveTo):MoveTo {
  return (obj || new MoveTo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
index():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Screeps.Creep.NextAction= obj
 * @returns Screeps.Creep.NextAction
 */
next(index: number, obj?:Screeps.Creep.NextAction):Screeps.Creep.NextAction|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Screeps.Creep.NextAction).__init(this.bb!.__vector(this.bb_pos + offset) + index * 4, this.bb!) : null;
};

/**
 * @returns number
 */
nextLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param Screeps.Creep.Actor= obj
 * @returns Screeps.Creep.Actor|null
 */
actor(obj?:Screeps.Creep.Actor):Screeps.Creep.Actor|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Screeps.Creep.Actor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param Screeps.Creep.Actor= obj
 * @returns Screeps.Creep.Actor|null
 */
target(obj?:Screeps.Creep.Actor):Screeps.Creep.Actor|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Screeps.Creep.Actor).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startMoveTo(builder:flatbuffers.Builder) {
  builder.startObject(4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number index
 */
static addIndex(builder:flatbuffers.Builder, index:number) {
  builder.addFieldInt16(0, index, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nextOffset
 */
static addNext(builder:flatbuffers.Builder, nextOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nextOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startNextVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset actorOffset
 */
static addActor(builder:flatbuffers.Builder, actorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, actorOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset targetOffset
 */
static addTarget(builder:flatbuffers.Builder, targetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, targetOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endMoveTo(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createMoveTo(builder:flatbuffers.Builder, index:number, nextOffset:flatbuffers.Offset, actorOffset:flatbuffers.Offset, targetOffset:flatbuffers.Offset):flatbuffers.Offset {
  MoveTo.startMoveTo(builder);
  MoveTo.addIndex(builder, index);
  MoveTo.addNext(builder, nextOffset);
  MoveTo.addActor(builder, actorOffset);
  MoveTo.addTarget(builder, targetOffset);
  return MoveTo.endMoveTo(builder);
}
}
}
/**
 * @constructor
 */
export namespace Screeps.Creep{
export class untilFailure {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns untilFailure
 */
__init(i:number, bb:flatbuffers.ByteBuffer):untilFailure {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param untilFailure= obj
 * @returns untilFailure
 */
static getRootAsuntilFailure(bb:flatbuffers.ByteBuffer, obj?:untilFailure):untilFailure {
  return (obj || new untilFailure).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
index():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @returns Screeps.Creep.Action
 */
doType(index: number):Screeps.Creep.Action|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
};

/**
 * @returns number
 */
doTypeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
doTypeArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Table= obj
 * @returns ?flatbuffers.Table
 */
do<T extends flatbuffers.Table>(index: number, obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns number
 */
doLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startuntilFailure(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param number index
 */
static addIndex(builder:flatbuffers.Builder, index:number) {
  builder.addFieldInt16(0, index, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset doTypeOffset
 */
static addDoType(builder:flatbuffers.Builder, doTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, doTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<Screeps.Creep.Action> data
 * @returns flatbuffers.Offset
 */
static createDoTypeVector(builder:flatbuffers.Builder, data:Screeps.Creep.Action[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDoTypeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset doOffset
 */
static addDo(builder:flatbuffers.Builder, doOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, doOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createDoVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDoVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static enduntilFailure(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createuntilFailure(builder:flatbuffers.Builder, index:number, doTypeOffset:flatbuffers.Offset, doOffset:flatbuffers.Offset):flatbuffers.Offset {
  untilFailure.startuntilFailure(builder);
  untilFailure.addIndex(builder, index);
  untilFailure.addDoType(builder, doTypeOffset);
  untilFailure.addDo(builder, doOffset);
  return untilFailure.enduntilFailure(builder);
}
}
}
/**
 * @constructor
 */
export namespace Screeps.Creep{
export class Actor {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Actor
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Actor {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Actor= obj
 * @returns Actor
 */
static getRootAsActor(bb:flatbuffers.ByteBuffer, obj?:Actor):Actor {
  return (obj || new Actor).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns number
 */
hash():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
ref():string|null
ref(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
ref(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startActor(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param number hash
 */
static addHash(builder:flatbuffers.Builder, hash:number) {
  builder.addFieldInt32(0, hash, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset refOffset
 */
static addRef(builder:flatbuffers.Builder, refOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, refOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endActor(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static createActor(builder:flatbuffers.Builder, hash:number, refOffset:flatbuffers.Offset):flatbuffers.Offset {
  Actor.startActor(builder);
  Actor.addHash(builder, hash);
  Actor.addRef(builder, refOffset);
  return Actor.endActor(builder);
}
}
}
/**
 * @constructor
 */
export namespace Screeps.Creep{
export class ActionStream {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ActionStream
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ActionStream {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ActionStream= obj
 * @returns ActionStream
 */
static getRootAsActionStream(bb:flatbuffers.ByteBuffer, obj?:ActionStream):ActionStream {
  return (obj || new ActionStream).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param number index
 * @returns Screeps.Creep.Action
 */
dataType(index: number):Screeps.Creep.Action|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
};

/**
 * @returns number
 */
dataTypeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
dataTypeArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Table= obj
 * @returns ?flatbuffers.Table
 */
data<T extends flatbuffers.Table>(index: number, obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__union(obj, this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns number
 */
dataLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param Screeps.Creep.Actor= obj
 * @returns Screeps.Creep.Actor
 */
actors(index: number, obj?:Screeps.Creep.Actor):Screeps.Creep.Actor|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Screeps.Creep.Actor).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
actorsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startActionStream(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataTypeOffset
 */
static addDataType(builder:flatbuffers.Builder, dataTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, dataTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<Screeps.Creep.Action> data
 * @returns flatbuffers.Offset
 */
static createDataTypeVector(builder:flatbuffers.Builder, data:Screeps.Creep.Action[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataTypeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset dataOffset
 */
static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, dataOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createDataVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startDataVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset actorsOffset
 */
static addActors(builder:flatbuffers.Builder, actorsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, actorsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createActorsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startActorsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endActionStream(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishActionStreamBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

static createActionStream(builder:flatbuffers.Builder, dataTypeOffset:flatbuffers.Offset, dataOffset:flatbuffers.Offset, actorsOffset:flatbuffers.Offset):flatbuffers.Offset {
  ActionStream.startActionStream(builder);
  ActionStream.addDataType(builder, dataTypeOffset);
  ActionStream.addData(builder, dataOffset);
  ActionStream.addActors(builder, actorsOffset);
  return ActionStream.endActionStream(builder);
}
}
}
